{"version":3,"sources":["component/MailBox/Section/MailBar.js","context/ColorContext.js","api/axios.js","reducer/mail.js","component/MailBox/Section/MailItem.js","component/MailBox/Section/MailList.js","component/MailBox/Section/MailView.js","component/MailBox/MailBox.js","component/Switch/Switch.js","App.js","reducer/index.js","index.js"],"names":["MailBar","data","section","onSectionChange","notReadMailCount","filter","item","read","length","notReadTrashCount","className","onClick","type","classNames","active","initialState","theme","reducer","state","action","localStorage","setItem","ThemeContext","createContext","ThemeProvider","props","useReducer","dispatch","Provider","value","children","getList","a","console","log","process","response","axios","get","mails","sagaGetItems","watchItems","SET_SECTION","SET_READ","SET_DELETE","GET_ITMES","setSection","createAction","setRead","id","setDelete","getItems","SUCCESS","FAILURE","call","payload","put","failure","takeEvery","mail","handleActions","produce","draft","selectedId","items","findIndex","index","nextIndex","loading","MailItem","title","from","time","useDispatch","useSelector","useContext","selectedItemRef","useRef","useEffect","current","scrollIntoView","behavior","block","selected","theme_light","theme_dark","ref","split","MailList","map","MailView","selectedItem","onGotoTrash","msg","MailBox","ItemById","Switch","btn_light","App","getItem","window","matchMedia","matches","rootSaga","all","rootReducer","combineReducers","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.59655467.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { FiMail, FiTrash2 } from \"react-icons/fi\";\r\nimport classNames from \"classnames\";\r\n\r\nfunction MailBar({ data, section, onSectionChange }) {\r\n  const notReadMailCount = data.filter(\r\n    (item) => item.section === \"inbox\" && item.read === \"false\"\r\n  ).length;\r\n\r\n  const notReadTrashCount = data.filter(\r\n    (item) => item.section === \"trash\" && item.read === \"false\"\r\n  ).length;\r\n\r\n  return (\r\n    <aside className=\"sidebar\">\r\n      <ul className=\"sidebar_container\">\r\n        <li onClick={() => onSectionChange(\"inbox\")}>\r\n          <button\r\n            type=\"button\"\r\n            className={classNames({ active: section === \"inbox\" })}\r\n          >\r\n            <span>\r\n              <FiMail />\r\n              <span> 받은 메일함 </span>\r\n            </span>\r\n            <span className=\"count\">{notReadMailCount}</span>\r\n          </button>\r\n        </li>\r\n\r\n        <li onClick={() => onSectionChange(\"trash\")}>\r\n          <button\r\n            type=\"button\"\r\n            className={classNames({ active: section === \"trash\" })}\r\n          >\r\n            <span>\r\n              <FiTrash2 />\r\n              <span> 지운 메일함 </span>\r\n            </span>\r\n            <span className=\"count\">{notReadTrashCount}</span>\r\n          </button>\r\n        </li>\r\n      </ul>\r\n    </aside>\r\n  );\r\n}\r\n\r\nexport default MailBar;\r\n","import { createContext, useReducer } from \"react\";\r\n\r\nconst initialState = {\r\n  theme: \"light\",\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DARK_MODE\":\r\n      localStorage.setItem(\"theme\", \"dark\");\r\n      return { theme: \"dark\" };\r\n    case \"LIGNT_MODE\":\r\n      localStorage.setItem(\"theme\", \"light\");\r\n      return { theme: \"light\" };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nexport const ThemeProvider = (props) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  return (\r\n    <ThemeContext.Provider value={{ state, dispatch }}>\r\n      {props.children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport const getList = async () => {\r\n  console.log(process.env.NODE_ENV, process.env.REACT_APP_API_URL);\r\n  if (process.env.NODE_ENV === \"development\") {\r\n    const response = await axios.get(`${process.env.REACT_APP_API_URL}/mails`);\r\n    return response.data;\r\n  } else {\r\n    const response = await axios.get(`${process.env.REACT_APP_API_URL}`);\r\n    // console.log(response.data.mails);\r\n    return response.data.mails;\r\n  }\r\n};\r\n\r\nexport const getListById = async (id) => {\r\n  const response = await axios.get(\r\n    `${process.env.REACT_APP_API_URL}/mails/${id}`\r\n  );\r\n  return response.data;\r\n};\r\n","import { call, put, takeEvery } from \"@redux-saga/core/effects\";\r\nimport produce from \"immer\";\r\nimport { createAction, handleActions } from \"redux-actions\";\r\nimport { getList } from \"../api/axios\";\r\n\r\n/**\r\n * Action Type\r\n */\r\nconst SET_SECTION = \"mail/SET_SECTION\";\r\nconst SET_READ = \"mail/SET_READ\";\r\nconst SET_DELETE = \"mail/SET_DELETE\";\r\n\r\nconst GET_ITMES = \"mail/GET_ITEMS\";\r\nconst GET_ITEMS_SUCCESS = \"mail/GET_ITEMS_SUCCESS\";\r\nconst GET_ITEMS_FAILURE = \"mail/GET_ITEMS_FAILURE\";\r\n/**\r\n * Action Creator Function\r\n */\r\nexport const setSection = createAction(SET_SECTION, (section) => section);\r\nexport const setRead = createAction(SET_READ, (id) => id);\r\nexport const setDelete = createAction(SET_DELETE, (id) => id);\r\n\r\nexport const getItems = createAction(GET_ITMES);\r\n\r\nfunction* sagaGetItems(type) {\r\n  const [SUCCESS, FAILURE] = [`${type}_SUCCESS`, `${type}_FAILURE`];\r\n  try {\r\n    const payload = yield call(getList);\r\n    yield put({ type: SUCCESS, payload });\r\n  } catch (error) {\r\n    yield put({ type: FAILURE, failure: true, payload: error });\r\n  }\r\n}\r\n\r\nexport function* watchItems() {\r\n  yield takeEvery(GET_ITMES, () => sagaGetItems(GET_ITMES));\r\n}\r\n\r\n/**\r\n * initial State\r\n */\r\nconst initialState = {\r\n  selectedId: 1,\r\n  section: \"inbox\",\r\n  items: {\r\n    loading: false,\r\n    data: [],\r\n    failure: null,\r\n  },\r\n};\r\n\r\n/**\r\n * Reducer\r\n */\r\nconst mail = handleActions(\r\n  {\r\n    [SET_SECTION]: (state, { payload: section }) =>\r\n      produce(state, (draft) => {\r\n        draft.section = section;\r\n        draft.selectedId =\r\n          draft.items.data.findIndex((item) => item.section === section) + 1;\r\n      }),\r\n\r\n    [SET_READ]: (state, { payload: id }) =>\r\n      produce(state, (draft) => {\r\n        const index = draft.items.data.findIndex((item) => item.id === id);\r\n        draft.items.data[index].read = true;\r\n        draft.selectedId = id;\r\n      }),\r\n\r\n    [SET_DELETE]: (state, { payload: id }) =>\r\n      produce(state, (draft) => {\r\n        // trash 로 변경\r\n        const index = draft.items.data.findIndex((item) => item.id === id);\r\n        draft.items.data[index].section = \"trash\";\r\n\r\n        // selectedId 변경\r\n        const nextIndex = state.items.data.findIndex(\r\n          (item) => item.section === \"inbox\" && item.id !== id\r\n        );\r\n\r\n        if (nextIndex > -1) {\r\n          draft.items.data[nextIndex].read = true;\r\n          draft.selectedId = draft.items.data[nextIndex].id;\r\n        } else {\r\n          draft.items.data[0].read = true;\r\n          draft.selectedId = 1;\r\n        }\r\n      }),\r\n\r\n    [GET_ITMES]: (state, action) =>\r\n      produce(state, (draft) => {\r\n        draft.items = { loading: true, data: null, failure: null };\r\n      }),\r\n    [GET_ITEMS_SUCCESS]: (state, { payload }) =>\r\n      produce(state, (draft) => {\r\n        draft.items = { loading: false, data: payload, failure: null };\r\n      }),\r\n    [GET_ITEMS_FAILURE]: (state, { payload }) =>\r\n      produce(state, (draft) => {\r\n        draft.items = { loading: false, data: null, failure: payload };\r\n      }),\r\n  },\r\n  initialState\r\n);\r\n\r\nexport default mail;\r\n","import classNames from \"classnames\";\r\nimport React, { useContext, useEffect, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ThemeContext } from \"../../../context/ColorContext\";\r\nimport { setRead } from \"../../../reducer/mail\";\r\n\r\nfunction MailItem({ id, read, title, from, time }) {\r\n  const dispatch = useDispatch();\r\n  const { selectedId } = useSelector((state) => state.mail);\r\n  const { state } = useContext(ThemeContext);\r\n\r\n  const selectedItemRef = useRef(null);\r\n\r\n  const scrollToSelected = () =>\r\n    selectedItemRef.current.scrollIntoView({\r\n      behavior: \"smooth\",\r\n      block: \"center\",\r\n    });\r\n  useEffect(() => {\r\n    if (id === selectedId) {\r\n      scrollToSelected();\r\n    }\r\n  }, [id, selectedId]);\r\n\r\n  return (\r\n    <div\r\n      className={classNames(\r\n        \"mail_items\",\r\n        { selected: id === selectedId },\r\n        { theme_light: state.theme === \"light\" },\r\n        { theme_dark: state.theme === \"dark\" }\r\n      )}\r\n      onClick={() => {\r\n        dispatch(setRead(id));\r\n      }}\r\n      ref={selectedItemRef}\r\n    >\r\n      <div className=\"mail_items_trunc\" data-read={read}></div>\r\n      <div className=\"mail_items_title trunc\">{title}</div>\r\n      <div className=\"mail_items_sub\">\r\n        <span className=\"mail_items_from trunc\">{from}</span>\r\n        <span className=\"mail_items_time trunc\">{time.split(\" \")[0]}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MailItem;\r\n","import classNames from \"classnames\";\r\nimport React, { useContext } from \"react\";\r\nimport { ThemeContext } from \"../../../context/ColorContext\";\r\nimport MailItem from \"./MailItem\";\r\n\r\nfunction MailList({ data, section }) {\r\n  const { state } = useContext(ThemeContext);\r\n\r\n  return (\r\n    <div\r\n      className={classNames(\"mail_list\", {\r\n        theme_dark: state.theme === \"dark\",\r\n      })}\r\n    >\r\n      {data\r\n        .filter((item) => item.section === section)\r\n        .map((mail) => (\r\n          <MailItem key={mail.id} {...mail} />\r\n        ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MailList;\r\n","import classNames from \"classnames\";\r\nimport React, { useContext } from \"react\";\r\nimport { ThemeContext } from \"../../../context/ColorContext\";\r\nimport { FiTrash2 } from \"react-icons/fi\";\r\n\r\nfunction MailView({ selectedItem, onGotoTrash }) {\r\n  const { id, title, from, time, msg, section } = selectedItem;\r\n  const { state } = useContext(ThemeContext);\r\n\r\n  return (\r\n    <div\r\n      className={classNames(\r\n        \"mail_view\",\r\n        { theme_light: state.theme === \"light\" },\r\n        { theme_dark: state.theme === \"dark\" }\r\n      )}\r\n    >\r\n      <div className={`mail_view_header`}>\r\n        <h3 className=\"mail_view_title\">{title}</h3>\r\n        {section !== \"trash\" && (\r\n          <FiTrash2 className=\"btn_delete\" onClick={() => onGotoTrash(id)} />\r\n        )}\r\n        <div className=\"mail_sub\">\r\n          <div className=\"mail_view_from\">{from}</div>\r\n          <div className=\"mail_view_time\">{time}</div>\r\n        </div>\r\n      </div>\r\n      <div className=\"mail_view_msg\">{msg}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MailView;\r\n","import React, { useEffect } from \"react\";\r\nimport MailBar from \"./Section/MailBar\";\r\nimport MailList from \"./Section/MailList\";\r\nimport MailView from \"./Section/MailView\";\r\nimport \"./MailBox.scss\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getItems, setDelete, setSection } from \"../../reducer/mail\";\r\n\r\nfunction MailBox() {\r\n  const { selectedId, section, items } = useSelector((state) => state.mail);\r\n  const dispatch = useDispatch();\r\n  const onSectionChange = (section) => dispatch(setSection(section));\r\n  const onGotoTrash = (id) => dispatch(setDelete(id));\r\n\r\n  useEffect(() => {\r\n    dispatch(getItems());\r\n  }, [dispatch]);\r\n\r\n  if (!items.data) return null;\r\n  if (items.loading) return <div className=\"loading\">loading...</div>;\r\n  if (items.failure) return <div>error</div>;\r\n\r\n  const ItemById = items.data.filter((item) => item.id === selectedId);\r\n\r\n  return (\r\n    <>\r\n      <MailBar\r\n        data={items.data}\r\n        section={section}\r\n        onSectionChange={onSectionChange}\r\n      />\r\n      <div className=\"mail_container\">\r\n        <MailList data={items.data} section={section} />\r\n        {ItemById.length === 0 ? (\r\n          <div className=\"mail_view\">메일이 없습니다.</div>\r\n        ) : (\r\n          <MailView selectedItem={ItemById[0]} onGotoTrash={onGotoTrash} />\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MailBox;\r\n","import React, { useContext } from \"react\";\r\nimport { ThemeContext } from \"../../context/ColorContext\";\r\nimport classNames from \"classnames\";\r\nimport \"./Switch.scss\";\r\n\r\nfunction Switch() {\r\n  const { state, dispatch } = useContext(ThemeContext);\r\n\r\n  const changeMode = () => {\r\n    state.theme === \"light\"\r\n      ? dispatch({ type: \"DARK_MODE\" })\r\n      : dispatch({ type: \"LIGNT_MODE\" });\r\n  };\r\n\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      className={classNames(\"btn_darkmode\", {\r\n        btn_light: state.theme === \"light\",\r\n      })}\r\n      onClick={changeMode}\r\n    >\r\n      BUTTON\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Switch;\r\n","import React, { useContext, useEffect } from \"react\";\nimport MailBox from \"./component/MailBox/MailBox\";\nimport Switch from \"./component/Switch/Switch\";\nimport \"./App.scss\";\nimport { ThemeContext } from \"./context/ColorContext\";\n\nfunction App() {\n  const { dispatch } = useContext(ThemeContext);\n\n  useEffect(() => {\n    let theme = localStorage.getItem(\"theme\");\n\n    // 사용자 OS 테마적용\n    if (!theme) {\n      const { matches } = window.matchMedia(\"(prefers-color-scheme: dark)\");\n      theme = matches ? \"dark\" : \"light\";\n      localStorage.setItem(\"theme\", theme);\n    }\n    theme === \"dark\" && dispatch({ type: \"DARK_MODE\" });\n    theme === \"light\" && dispatch({ type: \"LIGHT_MODE\" });\n  }, [dispatch]);\n\n  return (\n    <div className=\"main\">\n      <Switch />\n      <div className=\"mail_wrapper\">\n        <MailBox />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\r\nimport { all } from \"redux-saga/effects\";\r\nimport mail, { watchItems } from \"./mail\";\r\n\r\nconst rootReducer = combineReducers({ mail });\r\n\r\nexport function* rootSaga() {\r\n  yield all([watchItems()]);\r\n}\r\n\r\nexport default rootReducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport rootReducer, { rootSaga } from \"./reducer\";\nimport { ThemeProvider } from \"./context/ColorContext\";\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(sagaMiddleware))\n);\n\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}